-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.MarkedAsDuplicateEvent exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| Identifies the actor who performed the event.
-}
actor :
    SelectionSet decodesTo Api.Interface.Actor
    -> SelectionSet (Maybe decodesTo) Api.Object.MarkedAsDuplicateEvent
actor object____ =
    Object.selectionForCompositeField "actor" [] object____ (Basics.identity >> Decode.nullable)


{-| The authoritative issue or pull request which has been duplicated by another.
-}
canonical :
    SelectionSet decodesTo Api.Union.IssueOrPullRequest
    -> SelectionSet (Maybe decodesTo) Api.Object.MarkedAsDuplicateEvent
canonical object____ =
    Object.selectionForCompositeField "canonical" [] object____ (Basics.identity >> Decode.nullable)


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.MarkedAsDuplicateEvent
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The issue or pull request which has been marked as a duplicate of another.
-}
duplicate :
    SelectionSet decodesTo Api.Union.IssueOrPullRequest
    -> SelectionSet (Maybe decodesTo) Api.Object.MarkedAsDuplicateEvent
duplicate object____ =
    Object.selectionForCompositeField "duplicate" [] object____ (Basics.identity >> Decode.nullable)


id : SelectionSet Api.ScalarCodecs.Id Api.Object.MarkedAsDuplicateEvent
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Canonical and duplicate belong to different repositories.
-}
isCrossRepository : SelectionSet Bool Api.Object.MarkedAsDuplicateEvent
isCrossRepository =
    Object.selectionForField "Bool" "isCrossRepository" [] Decode.bool

-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Package exposing (..)

import Api.Enum.PackageType
import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


id : SelectionSet Api.ScalarCodecs.Id Api.Object.Package
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Find the latest version for the package.
-}
latestVersion :
    SelectionSet decodesTo Api.Object.PackageVersion
    -> SelectionSet (Maybe decodesTo) Api.Object.Package
latestVersion object____ =
    Object.selectionForCompositeField "latestVersion" [] object____ (Basics.identity >> Decode.nullable)


{-| Identifies the name of the package.
-}
name : SelectionSet String Api.Object.Package
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| Identifies the type of the package.
-}
packageType : SelectionSet Api.Enum.PackageType.PackageType Api.Object.Package
packageType =
    Object.selectionForField "Enum.PackageType.PackageType" "packageType" [] Api.Enum.PackageType.decoder


{-| The repository this package belongs to.
-}
repository :
    SelectionSet decodesTo Api.Object.Repository
    -> SelectionSet (Maybe decodesTo) Api.Object.Package
repository object____ =
    Object.selectionForCompositeField "repository" [] object____ (Basics.identity >> Decode.nullable)


{-| Statistics about package activity.
-}
statistics :
    SelectionSet decodesTo Api.Object.PackageStatistics
    -> SelectionSet (Maybe decodesTo) Api.Object.Package
statistics object____ =
    Object.selectionForCompositeField "statistics" [] object____ (Basics.identity >> Decode.nullable)


type alias VersionRequiredArguments =
    { version : String }


{-| Find package version by version string.

  - version - The package version.

-}
version :
    VersionRequiredArguments
    -> SelectionSet decodesTo Api.Object.PackageVersion
    -> SelectionSet (Maybe decodesTo) Api.Object.Package
version requiredArgs____ object____ =
    Object.selectionForCompositeField "version" [ Argument.required "version" requiredArgs____.version Encode.string ] object____ (Basics.identity >> Decode.nullable)


type alias VersionsOptionalArguments =
    { orderBy : OptionalArgument Api.InputObject.PackageVersionOrder
    , after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| list of versions for this package

  - orderBy - Ordering of the returned packages.
  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
versions :
    (VersionsOptionalArguments -> VersionsOptionalArguments)
    -> SelectionSet decodesTo Api.Object.PackageVersionConnection
    -> SelectionSet decodesTo Api.Object.Package
versions fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { orderBy = Absent, after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "orderBy" filledInOptionals____.orderBy Api.InputObject.encodePackageVersionOrder, Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "versions" optionalArgs____ object____ Basics.identity

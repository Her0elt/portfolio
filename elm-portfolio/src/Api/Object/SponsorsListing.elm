-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.SponsorsListing exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The current goal the maintainer is trying to reach with GitHub Sponsors, if any.
-}
activeGoal :
    SelectionSet decodesTo Api.Object.SponsorsGoal
    -> SelectionSet (Maybe decodesTo) Api.Object.SponsorsListing
activeGoal object____ =
    Object.selectionForCompositeField "activeGoal" [] object____ (Basics.identity >> Decode.nullable)


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.SponsorsListing
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP path for the Sponsors dashboard for this Sponsors listing.
-}
dashboardResourcePath : SelectionSet Api.ScalarCodecs.Uri Api.Object.SponsorsListing
dashboardResourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "dashboardResourcePath" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The HTTP URL for the Sponsors dashboard for this Sponsors listing.
-}
dashboardUrl : SelectionSet Api.ScalarCodecs.Uri Api.Object.SponsorsListing
dashboardUrl =
    Object.selectionForField "ScalarCodecs.Uri" "dashboardUrl" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The full description of the listing.
-}
fullDescription : SelectionSet String Api.Object.SponsorsListing
fullDescription =
    Object.selectionForField "String" "fullDescription" [] Decode.string


{-| The full description of the listing rendered to HTML.
-}
fullDescriptionHTML : SelectionSet Api.ScalarCodecs.Html Api.Object.SponsorsListing
fullDescriptionHTML =
    Object.selectionForField "ScalarCodecs.Html" "fullDescriptionHTML" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecHtml |> .decoder)


id : SelectionSet Api.ScalarCodecs.Id Api.Object.SponsorsListing
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Whether this listing is publicly visible.
-}
isPublic : SelectionSet Bool Api.Object.SponsorsListing
isPublic =
    Object.selectionForField "Bool" "isPublic" [] Decode.bool


{-| The listing's full name.
-}
name : SelectionSet String Api.Object.SponsorsListing
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| A future date on which this listing is eligible to receive a payout.
-}
nextPayoutDate : SelectionSet (Maybe Api.ScalarCodecs.Date) Api.Object.SponsorsListing
nextPayoutDate =
    Object.selectionForField "(Maybe ScalarCodecs.Date)" "nextPayoutDate" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDate |> .decoder |> Decode.nullable)


{-| The HTTP path for this Sponsors listing.
-}
resourcePath : SelectionSet Api.ScalarCodecs.Uri Api.Object.SponsorsListing
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| The short description of the listing.
-}
shortDescription : SelectionSet String Api.Object.SponsorsListing
shortDescription =
    Object.selectionForField "String" "shortDescription" [] Decode.string


{-| The short name of the listing.
-}
slug : SelectionSet String Api.Object.SponsorsListing
slug =
    Object.selectionForField "String" "slug" [] Decode.string


{-| The entity this listing represents who can be sponsored on GitHub Sponsors.
-}
sponsorable :
    SelectionSet decodesTo Api.Interface.Sponsorable
    -> SelectionSet decodesTo Api.Object.SponsorsListing
sponsorable object____ =
    Object.selectionForCompositeField "sponsorable" [] object____ Basics.identity


type alias TiersOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.SponsorsTierOrder
    }


{-| The published tiers for this GitHub Sponsors listing.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - orderBy - Ordering options for Sponsors tiers returned from the connection.

-}
tiers :
    (TiersOptionalArguments -> TiersOptionalArguments)
    -> SelectionSet decodesTo Api.Object.SponsorsTierConnection
    -> SelectionSet (Maybe decodesTo) Api.Object.SponsorsListing
tiers fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Api.InputObject.encodeSponsorsTierOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "tiers" optionalArgs____ object____ (Basics.identity >> Decode.nullable)


{-| The HTTP URL for this Sponsors listing.
-}
url : SelectionSet Api.ScalarCodecs.Uri Api.Object.SponsorsListing
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUri |> .decoder)

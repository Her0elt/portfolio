-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.Gist exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


type alias CommentsOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    }


{-| A list of comments associated with the gist

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.

-}
comments :
    (CommentsOptionalArguments -> CommentsOptionalArguments)
    -> SelectionSet decodesTo Api.Object.GistCommentConnection
    -> SelectionSet decodesTo Api.Object.Gist
comments fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "comments" optionalArgs____ object____ Basics.identity


{-| Identifies the date and time when the object was created.
-}
createdAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.Gist
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The gist description.
-}
description : SelectionSet (Maybe String) Api.Object.Gist
description =
    Object.selectionForField "(Maybe String)" "description" [] (Decode.string |> Decode.nullable)


type alias FilesOptionalArguments =
    { limit : OptionalArgument Int
    , oid : OptionalArgument Api.ScalarCodecs.GitObjectID
    }


{-| The files in this gist.

  - limit - The maximum number of files to return.
  - oid - The oid of the files to return

-}
files :
    (FilesOptionalArguments -> FilesOptionalArguments)
    -> SelectionSet decodesTo Api.Object.GistFile
    -> SelectionSet (Maybe (List (Maybe decodesTo))) Api.Object.Gist
files fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { limit = Absent, oid = Absent }

        optionalArgs____ =
            [ Argument.optional "limit" filledInOptionals____.limit Encode.int, Argument.optional "oid" filledInOptionals____.oid (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapEncoder .codecGitObjectID) ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "files" optionalArgs____ object____ (Basics.identity >> Decode.nullable >> Decode.list >> Decode.nullable)


type alias ForksOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.GistOrder
    }


{-| A list of forks associated with the gist

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - orderBy - Ordering options for gists returned from the connection

-}
forks :
    (ForksOptionalArguments -> ForksOptionalArguments)
    -> SelectionSet decodesTo Api.Object.GistConnection
    -> SelectionSet decodesTo Api.Object.Gist
forks fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Api.InputObject.encodeGistOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "forks" optionalArgs____ object____ Basics.identity


id : SelectionSet Api.ScalarCodecs.Id Api.Object.Gist
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Identifies if the gist is a fork.
-}
isFork : SelectionSet Bool Api.Object.Gist
isFork =
    Object.selectionForField "Bool" "isFork" [] Decode.bool


{-| Whether the gist is public or not.
-}
isPublic : SelectionSet Bool Api.Object.Gist
isPublic =
    Object.selectionForField "Bool" "isPublic" [] Decode.bool


{-| The gist name.
-}
name : SelectionSet String Api.Object.Gist
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| The gist owner.
-}
owner :
    SelectionSet decodesTo Api.Interface.RepositoryOwner
    -> SelectionSet (Maybe decodesTo) Api.Object.Gist
owner object____ =
    Object.selectionForCompositeField "owner" [] object____ (Basics.identity >> Decode.nullable)


{-| Identifies when the gist was last pushed to.
-}
pushedAt : SelectionSet (Maybe Api.ScalarCodecs.DateTime) Api.Object.Gist
pushedAt =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "pushedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)


{-| The HTML path to this resource.
-}
resourcePath : SelectionSet Api.ScalarCodecs.Uri Api.Object.Gist
resourcePath =
    Object.selectionForField "ScalarCodecs.Uri" "resourcePath" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Returns a count of how many stargazers there are on this object
-}
stargazerCount : SelectionSet Int Api.Object.Gist
stargazerCount =
    Object.selectionForField "Int" "stargazerCount" [] Decode.int


type alias StargazersOptionalArguments =
    { after : OptionalArgument String
    , before : OptionalArgument String
    , first : OptionalArgument Int
    , last : OptionalArgument Int
    , orderBy : OptionalArgument Api.InputObject.StarOrder
    }


{-| A list of users who have starred this starrable.

  - after - Returns the elements in the list that come after the specified cursor.
  - before - Returns the elements in the list that come before the specified cursor.
  - first - Returns the first _n_ elements from the list.
  - last - Returns the last _n_ elements from the list.
  - orderBy - Order for connection

-}
stargazers :
    (StargazersOptionalArguments -> StargazersOptionalArguments)
    -> SelectionSet decodesTo Api.Object.StargazerConnection
    -> SelectionSet decodesTo Api.Object.Gist
stargazers fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { after = Absent, before = Absent, first = Absent, last = Absent, orderBy = Absent }

        optionalArgs____ =
            [ Argument.optional "after" filledInOptionals____.after Encode.string, Argument.optional "before" filledInOptionals____.before Encode.string, Argument.optional "first" filledInOptionals____.first Encode.int, Argument.optional "last" filledInOptionals____.last Encode.int, Argument.optional "orderBy" filledInOptionals____.orderBy Api.InputObject.encodeStarOrder ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "stargazers" optionalArgs____ object____ Basics.identity


{-| Identifies the date and time when the object was last updated.
-}
updatedAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.Gist
updatedAt =
    Object.selectionForField "ScalarCodecs.DateTime" "updatedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The HTTP URL for this Gist.
-}
url : SelectionSet Api.ScalarCodecs.Uri Api.Object.Gist
url =
    Object.selectionForField "ScalarCodecs.Uri" "url" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecUri |> .decoder)


{-| Returns a boolean indicating whether the viewing user has starred this starrable.
-}
viewerHasStarred : SelectionSet Bool Api.Object.Gist
viewerHasStarred =
    Object.selectionForField "Bool" "viewerHasStarred" [] Decode.bool

-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.TreeEntry exposing (..)

import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| The extension of the file
-}
extension : SelectionSet (Maybe String) Api.Object.TreeEntry
extension =
    Object.selectionForField "(Maybe String)" "extension" [] (Decode.string |> Decode.nullable)


{-| Whether or not this tree entry is generated
-}
isGenerated : SelectionSet Bool Api.Object.TreeEntry
isGenerated =
    Object.selectionForField "Bool" "isGenerated" [] Decode.bool


{-| Number of lines in the file.
-}
lineCount : SelectionSet (Maybe Int) Api.Object.TreeEntry
lineCount =
    Object.selectionForField "(Maybe Int)" "lineCount" [] (Decode.int |> Decode.nullable)


{-| Entry file mode.
-}
mode : SelectionSet Int Api.Object.TreeEntry
mode =
    Object.selectionForField "Int" "mode" [] Decode.int


{-| Entry file name.
-}
name : SelectionSet String Api.Object.TreeEntry
name =
    Object.selectionForField "String" "name" [] Decode.string


{-| Entry file object.
-}
object :
    SelectionSet decodesTo Api.Interface.GitObject
    -> SelectionSet (Maybe decodesTo) Api.Object.TreeEntry
object object____ =
    Object.selectionForCompositeField "object" [] object____ (Basics.identity >> Decode.nullable)


{-| Entry file Git object ID.
-}
oid : SelectionSet Api.ScalarCodecs.GitObjectID Api.Object.TreeEntry
oid =
    Object.selectionForField "ScalarCodecs.GitObjectID" "oid" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecGitObjectID |> .decoder)


{-| The full path of the file.
-}
path : SelectionSet (Maybe String) Api.Object.TreeEntry
path =
    Object.selectionForField "(Maybe String)" "path" [] (Decode.string |> Decode.nullable)


{-| The Repository the tree entry belongs to
-}
repository :
    SelectionSet decodesTo Api.Object.Repository
    -> SelectionSet decodesTo Api.Object.TreeEntry
repository object____ =
    Object.selectionForCompositeField "repository" [] object____ Basics.identity


{-| Entry byte size
-}
size : SelectionSet Int Api.Object.TreeEntry
size =
    Object.selectionForField "Int" "size" [] Decode.int


{-| If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule
-}
submodule :
    SelectionSet decodesTo Api.Object.Submodule
    -> SelectionSet (Maybe decodesTo) Api.Object.TreeEntry
submodule object____ =
    Object.selectionForCompositeField "submodule" [] object____ (Basics.identity >> Decode.nullable)


{-| Entry file type.
-}
type_ : SelectionSet String Api.Object.TreeEntry
type_ =
    Object.selectionForField "String" "type" [] Decode.string

-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Object.RepositoryVulnerabilityAlert exposing (..)

import Api.Enum.RepositoryVulnerabilityAlertDependencyScope
import Api.Enum.RepositoryVulnerabilityAlertState
import Api.InputObject
import Api.Interface
import Api.Object
import Api.Scalar
import Api.ScalarCodecs
import Api.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| When was the alert created?
-}
createdAt : SelectionSet Api.ScalarCodecs.DateTime Api.Object.RepositoryVulnerabilityAlert
createdAt =
    Object.selectionForField "ScalarCodecs.DateTime" "createdAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder)


{-| The associated Dependabot update
-}
dependabotUpdate :
    SelectionSet decodesTo Api.Object.DependabotUpdate
    -> SelectionSet (Maybe decodesTo) Api.Object.RepositoryVulnerabilityAlert
dependabotUpdate object____ =
    Object.selectionForCompositeField "dependabotUpdate" [] object____ (Basics.identity >> Decode.nullable)


{-| The scope of an alert's dependency
-}
dependencyScope : SelectionSet (Maybe Api.Enum.RepositoryVulnerabilityAlertDependencyScope.RepositoryVulnerabilityAlertDependencyScope) Api.Object.RepositoryVulnerabilityAlert
dependencyScope =
    Object.selectionForField "(Maybe Enum.RepositoryVulnerabilityAlertDependencyScope.RepositoryVulnerabilityAlertDependencyScope)" "dependencyScope" [] (Api.Enum.RepositoryVulnerabilityAlertDependencyScope.decoder |> Decode.nullable)


{-| Comment explaining the reason the alert was dismissed
-}
dismissComment : SelectionSet (Maybe String) Api.Object.RepositoryVulnerabilityAlert
dismissComment =
    Object.selectionForField "(Maybe String)" "dismissComment" [] (Decode.string |> Decode.nullable)


{-| The reason the alert was dismissed
-}
dismissReason : SelectionSet (Maybe String) Api.Object.RepositoryVulnerabilityAlert
dismissReason =
    Object.selectionForField "(Maybe String)" "dismissReason" [] (Decode.string |> Decode.nullable)


{-| When was the alert dismissed?
-}
dismissedAt : SelectionSet (Maybe Api.ScalarCodecs.DateTime) Api.Object.RepositoryVulnerabilityAlert
dismissedAt =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "dismissedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)


{-| The user who dismissed the alert
-}
dismisser :
    SelectionSet decodesTo Api.Object.User
    -> SelectionSet (Maybe decodesTo) Api.Object.RepositoryVulnerabilityAlert
dismisser object____ =
    Object.selectionForCompositeField "dismisser" [] object____ (Basics.identity >> Decode.nullable)


{-| The reason the alert was marked as fixed.
@deprecated The `fixReason` field is being removed. You can still use `fixedAt` and `dismissReason`. Removal on 2022-10-01 UTC.
-}
fixReason : SelectionSet (Maybe String) Api.Object.RepositoryVulnerabilityAlert
fixReason =
    Object.selectionForField "(Maybe String)" "fixReason" [] (Decode.string |> Decode.nullable)


{-| When was the alert fixed?
-}
fixedAt : SelectionSet (Maybe Api.ScalarCodecs.DateTime) Api.Object.RepositoryVulnerabilityAlert
fixedAt =
    Object.selectionForField "(Maybe ScalarCodecs.DateTime)" "fixedAt" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecDateTime |> .decoder |> Decode.nullable)


id : SelectionSet Api.ScalarCodecs.Id Api.Object.RepositoryVulnerabilityAlert
id =
    Object.selectionForField "ScalarCodecs.Id" "id" [] (Api.ScalarCodecs.codecs |> Api.Scalar.unwrapCodecs |> .codecId |> .decoder)


{-| Identifies the alert number.
-}
number : SelectionSet Int Api.Object.RepositoryVulnerabilityAlert
number =
    Object.selectionForField "Int" "number" [] Decode.int


{-| The associated repository
-}
repository :
    SelectionSet decodesTo Api.Object.Repository
    -> SelectionSet decodesTo Api.Object.RepositoryVulnerabilityAlert
repository object____ =
    Object.selectionForCompositeField "repository" [] object____ Basics.identity


{-| The associated security advisory
-}
securityAdvisory :
    SelectionSet decodesTo Api.Object.SecurityAdvisory
    -> SelectionSet (Maybe decodesTo) Api.Object.RepositoryVulnerabilityAlert
securityAdvisory object____ =
    Object.selectionForCompositeField "securityAdvisory" [] object____ (Basics.identity >> Decode.nullable)


{-| The associated security vulnerability
-}
securityVulnerability :
    SelectionSet decodesTo Api.Object.SecurityVulnerability
    -> SelectionSet (Maybe decodesTo) Api.Object.RepositoryVulnerabilityAlert
securityVulnerability object____ =
    Object.selectionForCompositeField "securityVulnerability" [] object____ (Basics.identity >> Decode.nullable)


{-| Identifies the state of the alert.
-}
state : SelectionSet Api.Enum.RepositoryVulnerabilityAlertState.RepositoryVulnerabilityAlertState Api.Object.RepositoryVulnerabilityAlert
state =
    Object.selectionForField "Enum.RepositoryVulnerabilityAlertState.RepositoryVulnerabilityAlertState" "state" [] Api.Enum.RepositoryVulnerabilityAlertState.decoder


{-| The vulnerable manifest filename
-}
vulnerableManifestFilename : SelectionSet String Api.Object.RepositoryVulnerabilityAlert
vulnerableManifestFilename =
    Object.selectionForField "String" "vulnerableManifestFilename" [] Decode.string


{-| The vulnerable manifest path
-}
vulnerableManifestPath : SelectionSet String Api.Object.RepositoryVulnerabilityAlert
vulnerableManifestPath =
    Object.selectionForField "String" "vulnerableManifestPath" [] Decode.string


{-| The vulnerable requirements
-}
vulnerableRequirements : SelectionSet (Maybe String) Api.Object.RepositoryVulnerabilityAlert
vulnerableRequirements =
    Object.selectionForField "(Maybe String)" "vulnerableRequirements" [] (Decode.string |> Decode.nullable)
